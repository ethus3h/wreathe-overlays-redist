diff --git a/src/Interpreter.hs b/src/Interpreter.hs
index a1e7f19..caac304 100644
--- a/src/Interpreter.hs
+++ b/src/Interpreter.hs
@@ -13,3 +13,3 @@ import Data.Maybe (isJust)
 import Data.Generics (everywhere, mkT)
-import Control.Applicative ((<$>),(<*>),(<$),(<*), Applicative(..))
+import Control.Applicative ((<$>),(<*>),(<$),(<*), Applicative(..), Alternative(..))
 import Data.List (sort, nub)
@@ -112,3 +112,3 @@ instance (MonadTrace m, MonadTrans t, Monad (t m)) => MonadTrace (t m) where
 
-newtype Trace m a = Trace { withTrace :: m a }  deriving (Functor, Monad, MonadError e)
+newtype Trace m a = Trace { withTrace :: m a }  deriving (Functor, Applicative, Monad, MonadError e)
 
@@ -128,3 +128,3 @@ instance MonadGraphGen m => MonadGraphGen (ReaderT r m) where
 
-newtype NoGraphT m a = NoGraphT {runNoGraphT :: m a} deriving (Monad, Functor, MonadFix, MonadPlus, Applicative, MonadError e)
+newtype NoGraphT m a = NoGraphT {runNoGraphT :: m a} deriving (Monad, Functor, MonadFix, MonadPlus, Applicative, Alternative, MonadError e)
 instance MonadTrans NoGraphT where
