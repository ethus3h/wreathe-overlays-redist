diff --git a/src/Snap/Snaplet/Auth/Backends/JsonFile.hs b/src/Snap/Snaplet/Auth/Backends/JsonFile.hs
index 1f62b0e..e1a3c9e 100644
--- a/src/Snap/Snaplet/Auth/Backends/JsonFile.hs
+++ b/src/Snap/Snaplet/Auth/Backends/JsonFile.hs
@@ -85,9 +85,9 @@ mkJsonAuthMgr fp = do
 ------------------------------------------------------------------------------
-type UserIdCache = Map UserId AuthUser
+newtype UserIdCache = UserIdCache { unUserIdCache :: Map UserId AuthUser }
 
 instance ToJSON UserIdCache where
-  toJSON m = toJSON $ HM.toList m
+  toJSON m = toJSON $ HM.toList $ unUserIdCache m
 
 instance FromJSON UserIdCache where
-  parseJSON = fmap HM.fromList . parseJSON
+  parseJSON = fmap (UserIdCache . HM.fromList) . parseJSON
 
@@ -115,3 +115,3 @@ defUserCache :: UserCache
 defUserCache = UserCache {
-    uidCache   = HM.empty
+    uidCache   = UserIdCache HM.empty
   , loginCache = HM.empty
@@ -190,3 +190,3 @@ jsonFileSave mgr u = do
             return $! cache {
-              uidCache   = HM.insert uid' u' $ uidCache cache
+              uidCache   = UserIdCache $ HM.insert uid' u' $ unUserIdCache $ uidCache cache
             , loginCache = HM.insert (userLogin u') uid' $ loginCache cache
@@ -232,3 +232,3 @@ jsonFileSave mgr u = do
           let new      = cache {
-                             uidCache   = HM.insert uid u' $ uidCache cache
+                             uidCache   = UserIdCache $ HM.insert uid u' $ unUserIdCache $ uidCache cache
                            , loginCache = lc
@@ -283,3 +283,3 @@ withCache mgr f = atomically $ do
 getUser :: UserCache -> UserId -> Maybe AuthUser
-getUser cache uid = HM.lookup uid (uidCache cache)
+getUser cache uid = HM.lookup uid (unUserIdCache $ uidCache cache)
 
