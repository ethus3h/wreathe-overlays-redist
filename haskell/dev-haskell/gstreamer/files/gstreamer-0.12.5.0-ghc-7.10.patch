diff --git a/Media/Streaming/GStreamer/Core/Caps.chs b/Media/Streaming/GStreamer/Core/Caps.chs
index c6521d0..ddc1741 100644
--- a/Media/Streaming/GStreamer/Core/Caps.chs
+++ b/Media/Streaming/GStreamer/Core/Caps.chs
@@ -92,2 +92,3 @@ module Media.Streaming.GStreamer.Core.Caps (
 
+import Control.Applicative
 import Control.Monad (liftM)
@@ -258,3 +259,3 @@ newtype CapsM a =
     CapsM (ReaderT (Ptr Caps) IO a)
-    deriving (Functor, Monad)
+    deriving (Functor, Applicative, Monad)
 
diff --git a/Media/Streaming/GStreamer/Core/Types.chs b/Media/Streaming/GStreamer/Core/Types.chs
index c032267..347a0b9 100644
--- a/Media/Streaming/GStreamer/Core/Types.chs
+++ b/Media/Streaming/GStreamer/Core/Types.chs
@@ -158,2 +158,3 @@ module Media.Streaming.GStreamer.Core.Types (
 
+import Control.Applicative
 import Control.Monad       ( liftM )
@@ -454,3 +455,3 @@ newtype (MiniObjectClass miniObjectT, Monad m) =>
         MiniObjectT (ReaderT (Ptr miniObjectT) m a)
-        deriving (Functor, Monad, MonadTrans)
+        deriving (Functor, Applicative, Monad, MonadTrans)
 instance (MiniObjectClass miniObjectT, Monad m, MonadIO m) =>
@@ -682,2 +683,9 @@ type StructureMRep a = (Structure -> IO a)
 
+instance Functor StructureM where
+    fmap  = liftM
+
+instance Applicative StructureM where
+    pure  = return
+    (<*>) = ap
+
 instance Monad StructureM where
